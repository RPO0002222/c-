#include <iostream>
#include <cstdlib>
#include <ctime>
#include <algorithm>
// очень сложное задание
using namespace std;

// Заполнение массива случайными значениями
void fillArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        arr[i] = rand() % 100;
    }
}

void fillArray(double arr[], int size) {
    for (int i = 0; i < size; i++) {
        arr[i] = (rand() % 1000) / 10.0;
    }
}

void fillArray(char arr[], int size) {
    for (int i = 0; i < size; i++) {
        arr[i] = 'A' + rand() % 26;
    }
}

// Вывод массива
void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

void printArray(double arr[], int size) {
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

void printArray(char arr[], int size) {
    for (int i = 0; i < size; i++) {
        cout << arr[i] << " ";
    }
    cout << endl;
}

// Поиск минимального элемента
int findMin(int arr[], int size) {
    int minVal = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] < minVal) minVal = arr[i];
    }
    return minVal;
}

double findMin(double arr[], int size) {
    double minVal = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] < minVal) minVal = arr[i];
    }
    return minVal;
}

char findMin(char arr[], int size) {
    char minVal = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] < minVal) minVal = arr[i];
    }
    return minVal;
}

// Поиск максимального элемента
int findMax(int arr[], int size) {
    int maxVal = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] > maxVal) maxVal = arr[i];
    }
    return maxVal;
}

double findMax(double arr[], int size) {
    double maxVal = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] > maxVal) maxVal = arr[i];
    }
    return maxVal;
}

char findMax(char arr[], int size) {
    char maxVal = arr[0];
    for (int i = 1; i < size; i++) {
        if (arr[i] > maxVal) maxVal = arr[i];
    }
    return maxVal;
}

// Сортировка (пузырьковая)
void sortArray(int arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]);
        }
    }
}

void sortArray(double arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]);
        }
    }
}

void sortArray(char arr[], int size) {
    for (int i = 0; i < size - 1; i++) {
        for (int j = 0; j < size - i - 1; j++) {
            if (arr[j] > arr[j + 1]) swap(arr[j], arr[j + 1]);
        }
    }
}

// Редактирование элемента
void editElement(int arr[], int size, int index, int value) {
    if (index >= 0 && index < size) arr[index] = value;
}

void editElement(double arr[], int size, int index, double value) {
    if (index >= 0 && index < size) arr[index] = value;
}

void editElement(char arr[], int size, int index, char value) {
    if (index >= 0 && index < size) arr[index] = value;
}

int main() {
    srand(time(0)); // Инициализация генератора случайных чисел

    // Пример использования для int
    int intArr[5];
    fillArray(intArr, 5);
    printArray(intArr, 5);
    cout << "Min: " << findMin(intArr, 5) << endl;
    cout << "Max: " << findMax(intArr, 5) << endl;
    sortArray(intArr, 5);
    printArray(intArr, 5);
    editElement(intArr, 5, 2, 99);
    printArray(intArr, 5);

    return 0;
}
